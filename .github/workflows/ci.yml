name: ci

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  checks:
    name: Checks
    uses: ./.github/workflows/checks.yml

  build:
    name: ${{ matrix.platform }}
    needs: [ checks ]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux-x64
          - macos-arm64
          - macos-x64
          - windows-x64

        include:
          - platform: linux-x64
            os: ubuntu-22.04
          - platform: macos-arm64
            os: macos-14
          - platform: macos-x64
            os: macos-13
          - platform: windows-x64
            os: windows-2022

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      # aws-lc-rs requires nasm: https://github.com/rustls/rustls/issues/1913
      - name: Install NASM
        if: ${{ startsWith(matrix.os, 'windows-') }}
        uses: ilammy/setup-nasm@v1

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@main
        with:
          tool: cargo-llvm-cov

      - name: Tests
        if: ${{ !startsWith(matrix.os, 'ubuntu-') }}
        env:
          CARGO_TERM_COLOR: always
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          RUST_BACKTRACE: 1
          RUST_LOG: "info"
          RUST_LOG_SPAN_EVENTS: full
        run: |
          cargo test --workspace --features all

      - name: Tests
        if: ${{ startsWith(matrix.os, 'ubuntu-') }}
        env:
          CARGO_TERM_COLOR: always
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          RUST_BACKTRACE: 1
          RUST_LOG: "info"
          RUST_LOG_SPAN_EVENTS: full
        run: |
          cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Upload to codecov.io
        if: ${{ startsWith(matrix.os, 'ubuntu-') }}
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          fail_ci_if_error: true
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

#      - name: Install benchmarking tools
#        if: ${{ github.ref == 'refs/heads/main' && startsWith(matrix.os, 'ubuntu-') }}
#        uses: bencherdev/bencher@main
#
#      - name: Run benchmarks
#        if: ${{ github.ref == 'refs/heads/main' && startsWith(matrix.os, 'ubuntu-') }}
#        env:
#          BENCHER_API_TOKEN: ${{ secrets.BENCHER_API_TOKEN }}
#          BENCHER_PROJECT: theseus-rs-rsql
#          BENCHER_ADAPTER: rust_criterion
#        run: |
#          cargo build --release
#          bencher run \
#            --file-size ./target/release/rsql \
#            --adapter json
#          bencher run \
#            "cargo bench"
